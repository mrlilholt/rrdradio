{"ast":null,"code":"var _jsxFileName = \"/Users/alilholt/rrdradio/riff-raff-deciders-radio/client/src/components/UploadSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getFirestore, collection, query, where, getDocs } from 'firebase/firestore';\nimport { app } from '../firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whitelist = ['addison.lilholt@gmail.com', 'ksryan85@gmail.com']; // Array storing whitelisted emails\n\nconst UploadSection = ({\n  currentUserEmail\n}) => {\n  _s();\n  const [isWhitelisted, setIsWhitelisted] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [file, setFile] = useState(null);\n  const [artist, setArtist] = useState('');\n  const [songTitle, setSongTitle] = useState('');\n  const [message, setMessage] = useState('');\n\n  // New state for the playlist (folder) choice\n  const [playlistType, setPlaylistType] = useState('Driving');\n  useEffect(() => {\n    const checkWhitelist = async () => {\n      try {\n        if (whitelist.includes(currentUserEmail)) {\n          setIsWhitelisted(true);\n        }\n      } catch (error) {\n        console.error('Error verifying whitelist:', error);\n      }\n      setLoading(false);\n    };\n    if (currentUserEmail) {\n      checkWhitelist();\n    } else {\n      setLoading(false);\n    }\n  }, [currentUserEmail]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file || !artist || !songTitle) {\n      setMessage('Please complete all fields.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'musicUploads');\n    // Use the selected playlistType to determine the folder\n    formData.append('folder', `music/${playlistType}`);\n    try {\n      const res = await fetch('https://api.cloudinary.com/v1_1/dkbkpdugz/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      console.log('Upload successful:', data.secure_url, artist, songTitle);\n\n      // TODO: After successful upload, send the Cloudinary URL,\n      // artist, songTitle, and playlistType to your backend to update the playlist.\n      setMessage('Upload successful!');\n    } catch (err) {\n      console.error('Upload failed:', err);\n      setMessage('File upload failed.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 25\n  }, this);\n  if (!isWhitelisted) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are not authorized to access the upload section.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload MP3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: artist,\n          onChange: e => setArtist(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Song Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: songTitle,\n          onChange: e => setSongTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Playlist Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: playlistType,\n          onChange: e => setPlaylistType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Driving\",\n            children: \"Driving\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sleepy Time\",\n            children: \"Sleepy Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Morning\",\n            children: \"Morning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Chill\",\n            children: \"Chill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hanging out\",\n            children: \"Hanging out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Get Pumped Up\",\n            children: \"Get Pumped Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Misc\",\n            children: \"Misc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"MP3 File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"audio/mp3\",\n          onChange: e => setFile(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadSection, \"ooHap2O03GDDrPa02FApf8MLyp8=\");\n_c = UploadSection;\nexport default UploadSection;\nvar _c;\n$RefreshReg$(_c, \"UploadSection\");","map":{"version":3,"names":["React","useState","useEffect","getFirestore","collection","query","where","getDocs","app","jsxDEV","_jsxDEV","whitelist","UploadSection","currentUserEmail","_s","isWhitelisted","setIsWhitelisted","loading","setLoading","file","setFile","artist","setArtist","songTitle","setSongTitle","message","setMessage","playlistType","setPlaylistType","checkWhitelist","includes","error","console","handleSubmit","e","preventDefault","formData","FormData","append","res","fetch","method","body","data","json","log","secure_url","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","required","accept","files","_c","$RefreshReg$"],"sources":["/Users/alilholt/rrdradio/riff-raff-deciders-radio/client/src/components/UploadSection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getFirestore, collection, query, where, getDocs } from 'firebase/firestore';\nimport { app } from '../firebaseConfig';\n\nconst whitelist = ['addison.lilholt@gmail.com', 'ksryan85@gmail.com']; // Array storing whitelisted emails\n\nconst UploadSection = ({ currentUserEmail }) => {\n    const [isWhitelisted, setIsWhitelisted] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [file, setFile] = useState(null);\n    const [artist, setArtist] = useState('');\n    const [songTitle, setSongTitle] = useState('');\n    const [message, setMessage] = useState('');\n\n    // New state for the playlist (folder) choice\n    const [playlistType, setPlaylistType] = useState('Driving');\n\n    useEffect(() => {\n        const checkWhitelist = async () => {\n            try {\n                if (whitelist.includes(currentUserEmail)) {\n                    setIsWhitelisted(true);\n                }\n            } catch (error) {\n                console.error('Error verifying whitelist:', error);\n            }\n            setLoading(false);\n        };\n\n        if (currentUserEmail) {\n            checkWhitelist();\n        } else {\n            setLoading(false);\n        }\n    }, [currentUserEmail]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!file || !artist || !songTitle) {\n            setMessage('Please complete all fields.');\n            return;\n        }\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('upload_preset', 'musicUploads');\n        // Use the selected playlistType to determine the folder\n        formData.append('folder', `music/${playlistType}`);\n\n        try {\n            const res = await fetch('https://api.cloudinary.com/v1_1/dkbkpdugz/upload', {\n                method: 'POST',\n                body: formData,\n            });\n            const data = await res.json();\n            console.log('Upload successful:', data.secure_url, artist, songTitle);\n\n            // TODO: After successful upload, send the Cloudinary URL,\n            // artist, songTitle, and playlistType to your backend to update the playlist.\n            setMessage('Upload successful!');\n        } catch (err) {\n            console.error('Upload failed:', err);\n            setMessage('File upload failed.');\n        }\n    };\n\n    if (loading) return <p>Loading...</p>;\n    if (!isWhitelisted) {\n        return <p>You are not authorized to access the upload section.</p>;\n    }\n\n    return (\n        <div className=\"upload-section\">\n            <h2>Upload MP3</h2>\n            {message && <p>{message}</p>}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Artist:</label>\n                    <input\n                        type=\"text\"\n                        value={artist}\n                        onChange={(e) => setArtist(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Song Title:</label>\n                    <input\n                        type=\"text\"\n                        value={songTitle}\n                        onChange={(e) => setSongTitle(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Playlist Type:</label>\n                    <select value={playlistType} onChange={(e) => setPlaylistType(e.target.value)}>\n                        <option value=\"Driving\">Driving</option>\n                        <option value=\"Sleepy Time\">Sleepy Time</option>\n                        <option value=\"Morning\">Morning</option>\n                        <option value=\"Chill\">Chill</option>\n                        <option value=\"Hanging out\">Hanging out</option>\n                        <option value=\"Get Pumped Up\">Get Pumped Up</option>\n                        <option value=\"Misc\">Misc</option>\n                    </select>\n                </div>\n                <div>\n                    <label>MP3 File:</label>\n                    <input\n                        type=\"file\"\n                        accept=\"audio/mp3\"\n                        onChange={(e) => setFile(e.target.files[0])}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Upload</button>\n            </form>\n        </div>\n    );\n};\n\nexport default UploadSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}